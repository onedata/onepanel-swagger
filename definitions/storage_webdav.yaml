description: The WebDAV storage configuration.
x-onedata-storage: true
allOf:
  - $ref: '#/definitions/StorageGetDetails'
  - $ref: '#/definitions/StorageCreateDetails'
  - type: object
    properties:
      type:
        type: string
        description: |
          The type of storage.
          
          `type = "webdav"`
          
          Storage backend compatible with
          [WebDAV](https://tools.ietf.org/html/rfc4918) protocol.
        enum: [webdav]
        x-discriminator-value: webdav
      endpoint:
        type: string
        description: >
            Full URL of the WebDAV server, including scheme (http or https) and path.
      verifyServerCertificate:
        type: boolean
        description: >
            Determines whether Oneprovider should verify the certificate of
            the WebDAV server.
        default: true
        x-onedata-default-value: true
      authorizationHeader:
        type: string
        description: >
            The authorization header to be used for passing the access token. This field
            can contain any prefix that should be added to the header value. Default is
            `Authorization: Bearer {}`. The token will placed where `{}` is provided.
        default: "Authorization: Bearer {}"
        x-onedata-default-value: '<<"Authorization: Bearer {}">>'
      rangeWriteSupport:
        type: string
        description: >
            The type of partial write support enabled in the WebDAV server. Currently 2
            types are supported `sabredav` which assumes the server supports the SabreDAV
            PartialUpdate extension via `PATCH` method, and `moddav` which assumes server
            supports partial `PUT` requests with `Content-Range` header. If `none` is
            selected no write support is available for this WebDAV storage.
        enum: [none, moddav, sabredav]
        default: none
        x-onedata-default-value: '<<"none">>'
      connectionPoolSize:
        type: integer
        description: >
            Defines the maximum number of parallel connections for a single WebDAV storage.
        default: 25
        x-onedata-default-value: 25
      maximumUploadSize:
        type: integer
        description: >
            Defines the maximum upload size for a single `PUT` or `PATCH` request. If set to 0,
            assumes that the WebDAV server has no upload limit.
        default: 0
        x-onedata-default-value: 0
      fileMode:
        type: string
        description: >
          Defines the file permissions, which files imported from WebDAV storage will have
          in Onedata. Values should be provided in octal format e.g. `0644`.
        default: "0664"
        x-onedata-default-value: '<<"0664">>'
      dirMode:
        type: string
        description: >
          Defines the directory mode which directories imported from WebDAV storage will
          have in Onedata. Values should be provided in octal format e.g. `0775`.
        default: "0775"
        x-onedata-default-value: '<<"0775">>'
      storagePathType:
        type: string
        enum: [canonical]
        default: canonical
        x-onedata-default-value: '<<"canonical">>'
        description: |
          Determines how the logical file paths will be mapped on the storage.
          'canonical' paths reflect the logical file names and directory structure,
          however each rename operation will require renaming the files on the storage.
          'flat' paths are based on unique file UUID's and do not require on-storage
          rename when logical file name is changed.
          Note, that 'flat' paths are not allowed on this type of storage.
    required:
    - type
    - endpoint
  - $ref: '#/definitions/WebdavCredentials'
example:
  type: webdav
  name: SomeWebDAV
  endpoint: https://192.168.1.2:8080/webdav
  verifyServerCertificate: false
  credentialsType: basic
  credentials: "admin:password"
  rangeWriteSupport: moddav
  connectionPoolSize: 25
  maximumUploadSize: 0
  skipStorageDetection: false
example:
  type: webdav
  name: SomeWebDAV
  endpoint: https://192.168.1.2:8080/webdav
  verifyServerCertificate: false
  credentialsType: token
  credentials: "9uIG9uZXpvbmUKMDAzMGlkZW500aWZpZXIgMDc00CB00aW1lIDwgMTU3MDY2ZkZWVhNDIxMzE3ZGU5YzdiMGUzZDVhYTFmNmMKMDAxYW"
  authorizationHeader: "X-Auth-Token: {}"
  rangeWriteSupport: moddav
  connectionPoolSize: 25
  maximumUploadSize: 0
  skipStorageDetection: false
example:
  type: webdav
  name: SomeWebDAV
  endpoint: https://192.168.1.2:8080/webdav
  verifyServerCertificate: false
  credentialsType: oauth2
  credentials: "eudat"
  oauth2IdP: b2access
  onedataAccessToken: MDAxNWxvY2F10aW9uIG9uZXpvbmUKMDAzMGlkZW500aWZpZXIgMDc00CB00aW1lIDwgMTU3MDY2ZkZWVhNDIxMzE3ZGU5YzdiMGUzZDVhYTFmNmMKMDAxYWNpZEwMzI4NQowMDJmc2lnbmF00dXJlIGTFnkfXYWEJ5PXUHYVJJIeOt4qdJ2LHeFL6r5OEYkgKCg
  rangeWriteSupport: moddav
  connectionPoolSize: 25
  maximumUploadSize: 0
  skipStorageDetection: false
example:
  type: webdav
  name: SomeWebDAV
  endpoint: https://192.168.1.2:8080/webdav
  verifyServerCertificate: false
  credentialsType: oauth2
  credentials: "eudat"
  oauth2IdP: b2access
  rangeWriteSupport: moddav
  connectionPoolSize: 25
  maximumUploadSize: 0
  skipStorageDetection: false
